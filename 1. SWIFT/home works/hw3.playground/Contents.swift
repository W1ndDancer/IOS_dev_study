import Cocoa

// 1. Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать). Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал и стоимость).

let teaCostDict: [String: Int] = ["Black": 100, "Green": 105, "Fruit": 110]

var queue: [String] = ["Black", "Black", "Fruit", "Green", "Black"]

for (i,v) in queue.enumerated() {
    if teaCostDict.keys.contains(v) {
        print("Costumer \(i+1) ordered \(v) tea and he must pay \(teaCostDict[v] ?? -1) Kc")
    } else {
        print("We dont have this type of tea - \(v). Sorry")
    }
}

// 2. Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.

/*
var ar0 = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
var ar1 = ar0.compactMap{$0}.filter {$0 != 0 && $0 != 4}.sorted(by: <)

print(ar1)
*/

// 3. Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза

/*
func newArr (num: Int) -> [Int] {
    var ar0: [Int] = []
    for n in 1...num {
        if n==1 {
        ar0.append(n)
        } else {
        ar0.append(n*2)
        }
    }
    return ar0
}

print(newArr(num:10))
*/
